version: 2.1

orbs:
  codecov: codecov/codecov@3

executors:
  java-executor:
    docker:
      - image: circleci/openjdk:8-jdk
jobs:
  build:
    executor: java-executor
    docker:
      # Utiliser une image Docker avec Java 8 ou supérieur
      - image: cimg/openjdk:18.0.2

    steps:
      - checkout # Récupère le code source
      - run : mvn clean install
      - run:
          name: Maven install dependencies
          command: mvn install -DskipTests=true
      - run:
          name: Maven run tests
          command: mvn test
#      - run:
#          name: Install dependencies
#          command: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      - run: mvn jacoco:report
      - run:
          name: Run tests and collect coverage
          command: mvn -B test
      - run:
          name: Upload coverage to Codecov
          command: |-
            curl -s https://codecov.io/bash | bash -s -- -t $CODECOV_TOKEN -f target/site/jacoco/jacoco.xml -r BZT-T/ceri-m1-techniques-de-test
      # Génération de la Javadoc
      - run:
          name: Generate Javadoc
          command: mvn -B javadoc:javadoc

      - run:
          name: Run Checkstyle
          command: |
            mvn checkstyle:check || true
            
            error_count=$(grep -o '<file .*>\(.*\)' target/checkstyle-result.xml | wc -l)
            
            sed -i "s/Checkstyle Errors: [ 0-9 ]*/Checkstyle Errors: $error_count/" README.md
            git config --global user.email "yassinebouazzati2@gmail.com"
            git config --global user.name "BZT-T"
            
            git add README.md
            git commit -m "Update README with Checkstyle error count [skip ci]"
            git push

      - run:
          name: Publish Javadoc to GitHub Pages
          command: |
            git config --global user.email "yassinebouazzati2@gmail.com"
            git config --global user.name "BZT-T"
            git clone --branch gh-pages https://BZT-T:${GH_PAT}@github.com/BZT-T/ceri-m1-techniques-de-test.git gh-pages
            cd gh-pages
            
            # Supprimer les anciens fichiers
            rm -rf *
            
            # Copier la nouvelle documentation générée
            cp -r ../target/site/apidocs/* ./
            
            # Commit et Push
            git add .
            git commit -m "Update Javadoc [skip ci]"
            git push origin gh-pages

workflows:
  version: 2
  build_and_upload:
    jobs:
      - build:
          filters:
            branches:
              only: master
